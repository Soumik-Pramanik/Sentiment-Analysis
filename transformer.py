# -*- coding: utf-8 -*-
"""Final_Transfromer.ipynb
Automatically generated by Colaboratory.
# Authenticating with Google Drive
"""

from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

"""# To Download the Datasets"""

download = drive.CreateFile({'id':'1gVExcJs31_mHWFGNvH3YpXBnS-A_XurA'})   # replace the id with id of file you want to access
download.GetContentFile('train.csv')        # replace the file name with your file

download = drive.CreateFile({'id':'13Nc1ZZaJD7_kBup22ScZYXmxAYNg1TOT'})   # replace the id with id of file you want to access
download.GetContentFile('test.csv')        # replace the file name with your file

download = drive.CreateFile({'id':'1xyw2FyO1RTOAK-h7V3PYF_Sxmn8ho5jh'})   # replace the id with id of file you want to access
download.GetContentFile('gold_test.csv')        # replace the file name with your file

"""# Install the ktrain package"""

!pip install ktrain

"""# Import the packages"""

import ktrain
from ktrain import text

"""# Initialising the categories and prepare data for preprocessing"""

categories=['1','2','3','4','5']
X_train=train['reviews'].to_numpy()
y_train=train['ratings'].to_numpy()
y_train=pd.get_dummies(y_train)
y_train=y_train.to_numpy()
y_train
X_test=test['reviews'].to_numpy()
y_test=test['ratings'].to_numpy()
y_test=pd.get_dummies(y_test)
y_test=y_test.to_numpy()
y_test

"""# Download the pre-trained DistilBERT-base-uncased Model"""

model_name='distilbert-base-uncased'
trans=text.Transformer(model_name,maxlen=512,class_names=categories)

"""# Preprocessing the Data"""

train_data=trans.preprocess_train(X_train,y_train)
test_data=trans.preprocess_test(X_test,y_test)

"""# Training the Model"""

model=trans.get_classifier()
learner=ktrain.get_learner(model,train_data=train_data,val_data=test_data,batch_size=16)
learner.fit_onecycle(1e-4,2)
learner.validate()
predictor=ktrain.get_predictor(learner.model,preproc=trans)

"""# Predicting the rating of a sentence"""

x='the product is bad'
print("the rating out of 5 is",predictor.predict(x))

"""# Explanalability of the output"""

!pip install git+https://github.com/amaiya/eli5@tfkeras_0_10_1
predictor.explain(x,all_targets=True)
